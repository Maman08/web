import { useState } from 'react';
import './App.css';

function App() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [tasks, setTasks] = useState([]);
  const [editingIndex, setEditingIndex] = useState(null);

  const handleAddTask = () => {
    if (title && description) {
      const newTask = { title, description, completed: false };
      setTasks([...tasks, newTask]);
      setTitle("");
      setDescription("");
    } else {
      alert("Please enter both title and description.");
    }
  };

  const handleDeleteTask = (index) => {
    const updatedTasks = [...tasks];
    updatedTasks.splice(index, 1);
    setTasks(updatedTasks);
  };

  const handleEditTask = (index) => {
    setEditingIndex(index);
    setTitle(tasks[index].title);
    setDescription(tasks[index].description);
  };

  const handleUpdateTask = () => {
    if (title && description) {
      const updatedTasks = [...tasks];
      updatedTasks[editingIndex] = { title, description, completed: false };
      setTasks(updatedTasks);
      setTitle("");
      setDescription("");
      setEditingIndex(null);
    } else {
      alert("Please enter both title and description.");
    }
  };

  const handleCompleteTask = (index) => {
    const updatedTasks = [...tasks];
    updatedTasks[index].completed = !updatedTasks[index].completed;
    setTasks(updatedTasks);
  };

  return (
    <div className="container">
      <h1 className='heading'>Todo Manager</h1>
      <div className='input'>
        <input type="text" placeholder='title' value={title} onChange={(e) => setTitle(e.target.value)} />
        <input type="text" placeholder='description' value={description} onChange={(e) => setDescription(e.target.value)} />
        {editingIndex !== null ? (
          <button onClick={handleUpdateTask}>Update</button>
        ) : (
          <button onClick={handleAddTask}>Add</button>
        )}
      </div>

      <div className="addedTasks">
        <table>
          <tbody>
            {tasks.map((task, index) => (
              <tr key={index} style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>
                <td>{task.title}</td>
                <td>{task.description}</td>
                <td><button onClick={() => handleCompleteTask(index)}>{task.completed ? 'Undo' : 'Complete'}</button></td>
                <td><button onClick={() => handleEditTask(index)}>Edit</button></td>
                <td><button onClick={() => handleDeleteTask(index)}>Delete</button></td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default App;
